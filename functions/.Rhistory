}
# function to get the winner of each completed set
get.set.winner <- function(arg.set.string) {
p1.games <- as.integer(substr(arg.set.string,1,1))
p2.games <- as.integer(substr(arg.set.string,3,3))
if ((p1.games == 6 & p2.games < 5) | (p1.games == 7)) {
return(list("P1",p1.games,p2.games))
} else if ((p2.games == 6 & p1.games < 5) | (p2.games == 7)) {
return(list("P2",p1.games,p2.games))
} else {
return("error")
}
}
# retrieve winners of completed sets
set.winners <- character(num.completed.sets)
if (num.completed.sets > 0) {
for (set.num in 1:num.completed.sets) {
set.winners[set.num] <- get.set.winner(scores[set.num])[[1]]
p1.total.games <- p1.total.games + min(6,get.set.winner(scores[set.num])[[2]])
p2.total.games <- p2.total.games + min(6,get.set.winner(scores[set.num])[[3]])
p1.total.tiebreaks <- p1.total.tiebreaks + ifelse(get.set.winner(scores[set.num])[[2]]==7,1,0)
p2.total.tiebreaks <- p2.total.tiebreaks + ifelse(get.set.winner(scores[set.num])[[3]]==7,1,0)
}
}
# extract number of completed sets won
p1.sets <- sum(set.winners == "P1")
p2.sets <- sum(set.winners == "P2")
rm(set.num,set.winners)
# get the number of games in the current set, if there is an uncompleted set
if (!arg.completed) {
p1.games <- as.integer(substr(scores[num.sets],1,1))
p2.games <- as.integer(substr(scores[num.sets],3,3))
p1.total.games <- p1.total.games + p1.games
p2.total.games <- p2.total.games + p2.games
}
# determine if a tiebreak is currently happening
if(p1.games == 6 & p2.games == 6) {
tiebreak.ind <- TRUE
} else {
tiebreak.ind <- FALSE
}
# index of "-" for points
if (!arg.completed) {
dash.index <- gregexpr(pattern = "-", scores[length(scores)])[[1]]
# get the number of points in the current game, depends
p1.points <- substr(scores[length(scores)],1,dash.index-1)
p2.points <- substr(scores[length(scores)],dash.index+1,nchar(scores[length(scores)]))
# if not a tiebreak then need to convert scores like 40 and 30 to integer number of points
if(!(tiebreak.ind)) {
p1.points <- switch(p1.points,
"0" = 0,
"15" = 1,
"30" = 2,
"40" = 3,
"Ad" = 4)
p2.points <- switch(p2.points,
"0" = 0,
"15" = 1,
"30" = 2,
"40" = 3,
"Ad" = 4)
}
p1.points <- as.integer(p1.points)
p2.points <- as.integer(p2.points)
}
return(list("p1.sets" = p1.sets,
"p2.sets" = p2.sets,
"p1.games" = p1.games,
"p2.games" = p2.games,
"p1.points" = p1.points,
"p2.points" = p2.points,
"tiebreak.ind" = tiebreak.ind,
"p1.total.games" = p1.total.games,
"p2.total.games" = p2.total.games,
"p1.total.tiebreaks" = p1.total.tiebreaks,
"p2.total.tiebreaks" = p2.total.tiebreaks))
}
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)]
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("score_string.R")
x <- convert.score("7-6 4-2 0-0",FALSE)
View(stats.data)
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved),
svpts_pct_won = svpct_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved),
svpts_pct_won = svpct_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
View(stats.data)
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved),
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved),
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
x <- stats.data[order(svgames_pct_won)]
View(x)
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010 & right(score,3) != 'RET' ,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010 & right(score,3)!='RET',.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][,.(x = right(score,3))]
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][,.(x = substr(score,nchar(score)-3,nchar(score)))]
View(stats.data)
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][substr(score,nchar(score)-3,nchar(score)) != 'RET',]
x <- stats.data[order(svgames_pct_won)]
View(x)
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][,.(substr(score,nchar(score)-3,nchar(score)) != 'RET')]
View(stats.data)
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][,.(x <- substr(score,nchar(score)-3,nchar(score)))]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][,.(x <- substr(score,nchar(score)-2,nchar(score)))]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][substr(score,nchar(score)-2,nchar(score)) != 'RET',]
x <- stats.data[order(svgames_pct_won)]
View(x)
x <- sample(stats.data,100)[,.(svpts_pct_won,svgames_pct_won)]
x <- stats.data[sample(.N,100),][,.(svpts_pct_won,svgames_pct_won)]
View(x)
x <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
View(x)
View(stats.data)
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),]
View(stats.data)
x <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
View(x)
View(stats.data)
x <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
View(x)
set.seed(123)
x <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
View(x)
y <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
View(y)
x <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
rm(y)
View(x)
stats.data[is.na(svpts_pct_won),]
y <- stats.data[is.na(svpts_pct_won),]
View(y)
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][!is.na(svpts_pct_won),]
set.seed(123)
x <- stats.data[sample(.N,100),.(svpts_pct_won,svgames_pct_won)]
View(x)
set.seed(123)
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)]
ggplot(results, aes(x = svpts_pct_won, y = svgames_pct_won)) + geom_line(size = 0.8, color = "cyan 3")
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)][,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)]
View(x)
View(x)
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][!is.na(svpts_pct_won),]
# determine average % pts won vs % svgames held
results <- stats.data[sample(.N,1000),.(svpts_pct_won,svgames_pct_won)][,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)]
View(results)
# determine average % pts won vs % svgames held
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][,.(avg_games = sum(games)/.N),by=.(points)]
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)]
View(results)
results2 <- results[,.(avg_games = sum(games)/.N),by=.(points)]
results2 <- results[,.(avg_games = .N),by=.(points)]
results2 <- results[,.(avg_games = .N),by=points]
results
head(results)
results2 <- results[,.(count = .N), by = points]
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][!is.na(svpts_pct_won),]
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)]
View(results)
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][,.(count = .N), by = point]
View(results)
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][,.(avg_games = sum(games)/.N), by = point]
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][,.(avg_games = sum(game)/.N), by = point]
View(results)
ggplot(results, aes(x = points, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
ggplot(results, aes(x = point, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][point >= 0.4,.(avg_games = sum(game)/.N), by = point]
ggplot(results, aes(x = point, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][point >= 0.3,.(avg_games = sum(game)/.N), by = point]
ggplot(results, aes(x = point, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
results
results
View(results)
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][point >= 0.3,.(avg_games = sum(game)/.N), by = point][order(point)]
results
p <- ggplot(results, aes(x = point, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
p
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][point >= 0.4,.(avg_games = sum(game)/.N), by = point]
p <- ggplot(results, aes(x = point, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
p
results <- stats.data[,.(point = round(svpts_pct_won/0.01)*0.01,game = round(svgames_pct_won/0.01)*0.01)][point >= 0.4,.(avg_games = sum(game)/.N), by = point]
p <- ggplot(results, aes(x = point, y = avg_games)) + geom_line(size = 0.8, color = "cyan 3")
p
