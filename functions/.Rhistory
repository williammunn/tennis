install.packages('prettydoc')
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][!is.na(svpts_pct_won),]
View(stats.data)
low <- stats.data[winner_name == player_name,]
low <- stats.data[winner_name == player_name,][order(svpts_pct_won)][1:50]
View(low)
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/');source("load_data.R")
# data for actual matches
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,loser_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,loser_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)[,`:=`(
svpt_won = fwon + swon,
svgames_won = svgames - (bpfaced - bpsaved)
)][,`:=`(
svpts_pct_won = svpt_won / svpt,
svgames_pct_won = svgames_won / svgames
)][!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][!is.na(svpts_pct_won),]
# players who won a match with a low % of service points won
low <- stats.data[winner_name == player_name,][order(svpts_pct_won)][1:50]
View(low)
high <- stats.data[loser == player_name,][order(-svpts_pct_won)][1:50]
high <- stats.data[loser_name == player_name,][order(-svpts_pct_won)][1:50]
View(high)
rm(list=ls())
library(ggplot2)
library(data.table)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
rm(player.data,seedings.data,tourney.data,dir)
rm(list=ls())
library(ggplot2)
library(data.table)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
rm(player.data,seedings.data,tourney.data,dir)
stats.data <- Data[year(tourney_date)>=2010,.(tourney_name,tourney_date,winner_name,loser_name,score,
w_svpt,w_SvGms,w_1stWon,w_2ndWon,w_bpFaced,w_bpSaved,
l_svpt,l_SvGms,l_1stWon,l_2ndWon,l_bpFaced,l_bpSaved)]
stats.data <- rbind(
stats.data[,.(tourney_name,tourney_date,score,winner_name,loser_name,player_name=winner_name,svpt=w_svpt,svgames=w_SvGms,fwon=w_1stWon,swon=w_2ndWon,bpsaved=w_bpSaved,bpfaced=w_bpFaced)],
stats.data[,.(tourney_name,tourney_date,score,winner_name,loser_name,player_name=loser_name,svpt=l_svpt,svgames=l_SvGms,fwon=l_1stWon,swon=l_2ndWon,bpsaved=l_bpSaved,bpfaced=l_bpFaced)]
)
View(stats.data)
View(match.data)
View(Data)
stats.data <- Data[year(tourney_date)>=2010,
.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)]
rm(list=ls())
library(ggplot2)
library(data.table)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)]
rm(list=ls())
library(ggplot2)
library(data.table)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)]
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)]
View(stats)
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)][
,`:=`(
w_sv = sum(w_1stWon,w_2ndWon)/w_svpt,
l_sv = sum(l_1stWon,l_2ndWon)/l_svpt,
)
]
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)][
,`:=`(
w_sv = sum(w_1stWon,w_2ndWon)/w_svpt,
l_sv = sum(l_1stWon,l_2ndWon)/l_svpt
)
]
View(stats)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)][
,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt
)
]
View(stats)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)][
,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt
)][
,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv
)][
,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
View(stats)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)][
,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt
)][
,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv
)][
,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),]
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
View(stats)
stats[c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[c("w_sv","w_rt","l_sv","l_rt")], function(x) round(x,2))
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[c("w_sv","w_rt","l_sv","l_rt")], function(x) round(x,2))
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) round(x,2))
View(stats)
install.packages("scales")
install.packages("scales")
library(scales)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) label_percent(round(x,2)))
rm(list=ls())
library(ggplot2)
library(data.table)
library(scales)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) label_percent(round(x,2)))
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) percent(round(x,2)))
View(stats)
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], percent)
View(stats)
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) percent(round(x,2)))
View(stats)
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) round(percent(x),2))
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], round(x,2))
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], round(x,2))
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,l_sv,l_rt)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# round percentages
stats[,c("w_sv","w_rt","l_sv","l_rt")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) round(x,2))
View(stats)
bad_serving <- stats[order(w_sv)]
head(low)
bad_serving <- stats[order(w_sv)]
head(bad_serving)
bad_serving <- stats[year(tourney_date)>=2010,order(w_sv)]
head(bad_serving)
bad_serving <- stats[year(tourney_date)>=2010,][order(w_sv)]
head(bad_serving)
good_serving <- stats.data[year(tourney_date)>=2010][order(-w_rt)]
head(good_serving)
good_serving <- stats.data[year(tourney_date)>=2010,][order(-w_rt)]
head(good_serving)
good_serving <- stats.data[year(tourney_date)>=2010,][order(-w_rt)]
good_serving <- stats[year(tourney_date)>=2010,][order(-w_rt)]
head(good_serving)
good_serving <- stats[year(tourney_date)>=2010,][order(-l_sv)]
head(good_serving)
bad_serving <- stats[year(tourney_date)>=2010,][order(w_sv)]
head(bad_serving)
good_serving <- stats[year(tourney_date)>=2010,][order(-l_sv)]
head(good_serving)
bad_serving <- stats[year(tourney_date)>=2010,][order(w_sv)]
head(bad_serving)
good_serving <- stats[year(tourney_date)>=2010,][order(-l_sv)]
head(good_serving)
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,`:=`(
w_diff = w_sv - w_rt,
l_diff = l_sv - l_rt)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,w_diff,l_sv,l_rt,l_diff)]
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
View(stats)
stats[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")] <- lapply(stats[,c("w_sv","w_rt","l_sv","l_rt")], function(x) round(x,2))
# look at the extremes at both ends
bad_serving <- stats[year(tourney_date)>=2010,][order(-w_diff)]
head(bad_serving)
bad_serving <- stats[year(tourney_date)>=2010,][order(w_diff)]
head(bad_serving)
good_serving <- stats[year(tourney_date)>=2010,][order(-l_diff)]
head(good_serving)
bad_serving <- stats[year(tourney_date)>=2010,][order(w_diff)]
head(bad_serving)
rm(list=ls())
library(ggplot2)
library(data.table)
library(scales)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,`:=`(
w_diff = w_sv - w_rt,
l_diff = l_sv - l_rt)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,w_diff,l_sv,l_rt,l_diff)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),][
!(is.na(w_sv))]
# look at the extremes at both ends
bad_serving <- stats[year(tourney_date)>=2010,][order(w_diff)]
good_serving <- stats[year(tourney_date)>=2010,][order(-l_diff)]
# round percentages
bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")] <- lapply(bad_serving[,c("w_sv","w_rt","l_sv","l_rt")], function(x) percent(round(x,2)))
bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")] <- lapply(bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")], function(x) percent(round(x,2)))
View(bad_serving)
# look at the extremes at both ends
bad_serving <- stats[year(tourney_date)>=2010,][order(w_diff)]
good_serving <- stats[year(tourney_date)>=2010,][order(-l_diff)]
# round percentages
bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")] <- lapply(bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")], function(x) percent(x,accuracy=2))
View(bad_serving)
View(bad_serving)
View(good_serving)
# tour average
stats[year(tourney_date)>=2010,.(mean_sv = mean(w_sv),mean_rt = mean(w_rt))]
View(stats)
stats[year(tourney_date)>=2010,.(mean_sv = mean(w_sv),mean_rt = mean(w_rt))]
stats[,.(count = .N),by=.(w_rt)][order(w_rt)]
x <- stats[,.(count = .N),by=.(w_rt)][order(w_rt)]
View(x)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,`:=`(
w_diff = w_sv - w_rt,
l_diff = l_sv - l_rt)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,w_diff,l_sv,l_rt,l_diff)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),]
stats <- na.omit(stats)
stats[year(tourney_date)>=2010,.(mean_sv = mean(w_sv),mean_rt = mean(w_rt))]
outcomes <- sapply(1:1000, function(x) play.point("P1",0.8))
rm(list=ls())
setwd('/Users/williammunn/Documents/Github/tennis/functions/simulate_match.R')
# show that play.point is eventually right
outcomes <- sapply(1:1000, function(x) play.point("P1",0.8))
setwd('/Users/williammunn/Documents/Github/tennis/functions/simulate_match.R')
source('/Users/williammunn/Documents/Github/tennis/functions/simulate_match.R')
outcomes <- sapply(1:1000, function(x) play.point("P1",0.8))
win_percent <- sum(outcomes == "P1")
outcomes <- sapply(1:1000, function(x) play.point("P1",0.8))
win_percent <- sum(outcomes == "P1")/length(outcomes)
percent(win_percent)
setwd('/Users/williammunn/Documents/Github/tennis/functions/')
source("load_data.R")
# data for actual matches, convert to player-centric
rm(player.data,seedings.data,tourney.data,dir)
stats <- Data[,.(tourney_name,tourney_date,winner_name,loser_name,score,w_svpt,w_1stWon,w_2ndWon,l_svpt,l_1stWon,l_2ndWon)
][,`:=`(
w_sv = (w_1stWon + w_2ndWon)/w_svpt,
l_sv = (l_1stWon + l_2ndWon)/l_svpt)
][,`:=`(
w_rt = 1 - l_sv,
l_rt = 1 - w_sv)
][,`:=`(
w_diff = w_sv - w_rt,
l_diff = l_sv - l_rt)
][,.(tourney_name,tourney_date,winner_name,loser_name,score,w_sv,w_rt,w_diff,l_sv,l_rt,l_diff)]
# remove matches that ended in retirement or were walkovers, and matches without stats
stats <- stats[!(substr(score,nchar(score)-2,nchar(score))  %in% c('RET','W/O')),]
stats <- na.omit(stats)
# look at the extremes at both ends
bad_serving <- stats[year(tourney_date)>=2010,][order(w_diff)]
good_serving <- stats[year(tourney_date)>=2010,][order(-l_diff)]
# round percentages
bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")] <- lapply(bad_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")], function(x) percent(x,accuracy=2))
good_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")] <- lapply(good_serving[,c("w_sv","w_rt","w_diff","l_sv","l_rt","l_diff")], function(x) percent(x,accuracy=2))
# tour average
stats[year(tourney_date)>=2010,.(mean_sv = mean(w_sv),mean_rt = mean(w_rt))]
